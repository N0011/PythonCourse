ðŸ”´#1 --> yes

ðŸ”´#2 --> nothing happens

ðŸ”´#3 --> list = [45, -3, 16 , 8 ]

ðŸ”´#4 -->
(a) lst[0] and lst[-4]
(b) lst[3] and lsr[-1]
(c) 10
(d) 29
(e) -4
(f) 29
(g) 10
(h) illegal

ðŸ”´#5 --> 
(a) 3
(b) 5
(c) 1
(d) 5
(e) 5
(f) 2
(g) 0
(h) 0

ðŸ”´#6 -->
 method len()
 
ðŸ”´#7 -->
 a = []
 
ðŸ”´#8 -->
 a = [20, 1 , -34, 40, -8 , 60 , 1, 3 ]
 b = [20, 1, -34]
 c = [-8, 60, 1, 3]
 d = [-8, 60, 1, 3]
 e = [40, -8]
 f = [20, 1, -34]
 g = [-8, 60, 1, 3]
 h = [20, 1, -34, 40, -8, 60, 1, 3]
 i = [20, 1, -34, 40]
 j = [1, -34, 40, -8]
 k = True
 l = False
 m = 8
 
 ðŸ”´#9 -->
 
 A[0:5] --> [2, 4, 6, 8, 10]
 A[6:11] --> [2, 4, 6, 8, 10]
 A[0:7:2] + A[7:] -->! [2, 4, 6, 8, 10]
 A[0:3] + A[6:] --> [2, 4, 6, 8, 10]
 A[0:5] --> [2, 4, 6, 8, 10]
 IMPOSSIBLE - HOWEVER -> A[0:] + [2, 4, 6, 8, 10] --> [2, 4, 6, 8, 10]
 A[-1:-6:-1] --> [2, 4, 6, 8, 10]
 IMPOSSIBLE - HOWEVER -> A[0:4] + [8, 10] --> [2, 4, 6, 8, 10]
 IMPOSSIBLE - HOWEVER -> [2, 4] + A[0:4] --> [2, 4, 6, 8, 10]
 IMPOSSIBLE - HOWEVER -> A[0:1] + [4, 6, 8] + A[1:2] --> [2, 4, 6, 8, 10]
 IMPOSSIBLE - HOWEVER -> [2] + A[0:3] + [10] --> [2, 4, 6, 8, 10]
 
 
 
  ðŸ”´#10 -->
  
 
 a[8,8,8,8]
 b[2,7,2,7,2,7,2,7,2,7,2,7]
 c[1,2,3,'a','b','c','d']
 d[1,2,1,2,1,2,4,2]
 e[1,2,4,2,1,2,4,2,1,2,4,2]
 
 ðŸ”´#11 -->
 
 (a)[3,5,7,9]
 (b)[50 , 60 , 70 , 80 , 90]
 (c)[12,15,18]
 (d)[(0,0),(0,1),(0,2),(0,3),(1,0),(1,1),(1,2),(1,3),(2,0),(2,1),(2,2),(2,3)]
 (e)[(0,0),(0,2),(1,1),(1,3),(2,0),(2,2)]
 
 
ðŸ”´#12 --> 
 
 print([x*x for x in [1, 2, 3, 4, 5]])
 print()
 
 print([x + 0.25 for x in [0, 0.25, 0.5, 0.75, 1.0, 1.25]])
 print()
 
 print([(x,y) for x in ('a' , 'b') for y in (0, 1, 2)])
 
 
 
 
ðŸ”´#13 -->

x in lst
x not in lst


ðŸ”´#14 -->

it reverses the list without creating a new list .it reverses the elements in the original list object.
 
 
 
 ðŸ”´#15 -->
 
 lst = [3,-3,5,2,-1,2]
 
 def sum_positive():
       sum = 0
       for i in a:
           if i > -1:
               sum = sum + i
       print(sum)
       
 sum_positive(a)
 
 
 
 ðŸ”´#16 -->
 
 lst = [3,5,4,-1,0]
 
 def count_evens(lst):
     evens_num = 0
     for i in lst:
         if i % 2 == 0:
             evens_num = evens_num + 1
     print(evens_num) 
 count_evens(lst)
 
 
 ðŸ”´#17 -->
 
lst = [1, 2, 3, 4, 5, 6]
num = 2

def print_big_enough(lst, num):
      sliced_lst = []
      for i in lst:
          if i >= num:
             sliced_lst += [i]
      print(sliced_lst)
print_big_enough(lst, num)
     

 
ðŸ”´#18 -->
 
lst = [5, 3, 1]
def next_number(lst):
     mymax = 0 
     num = 0
     for i in lst:
         if i > mymax:
              mymax = i
     for i in range(1, mymax + 1):
         if i not in lst:
             return i
             
     return mymax + 1
     
print(next_number(lst))




ðŸ”´#19 -->

mylist = ["nafise",2000,1999,"dabiri"]

def reverse(mylist):
    mylist2 = []
    for item in mylist:
        mylist2.insert(0, item)
    return mylist2
    
print(reverse(mylist))


 
 
 ðŸ”´#20 -->
 def matrix(satr,sotoon):
     result = []
     for i in range(satr):
         partial_result = []
         for i in range(sotoon):
             partial_result.append(1)
         result.append(partial_result)
         
     return result
     
 m = matrix(6, 9)
 for i in m:
     print(i)
     
     
 m[2][4] = 0
 
 print("---------------------------")
 
 for i in m:
      print(i)
      
 
ðŸ”´#21 -->

def way1():
   a = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
   print(a)
   
def way2():
   a = []
   
   for i in range(1, 11):
       a += [i]
   print(a)
   
def way3():
   a = []
   i = 1
   while i < 11:
       a.append(i)
       i += 1
   print(a)
   
def way4():
    b = [-10, -9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]
    a = (b[3:13])
    print(a)
    
def way5(n, a):
    if 11 > n > 0:
       a += [n]
       way5(n + 1, a)
    return a


way1()
way2()
way3()
way4()
print(way5(1, []))


ðŸ”´#22-->

def x (matris, a, b):
        for i in range(b):
            for c in range(b):
                 a[i][c] = matris[c][i]


def func (matris,b):
     a = [ [0 for c in range(len(matris[0])) ] for i in range(len(matris))]
     x (matris, a, b)
     for i in range(b):
            for c in range(b):
                  if (matris[i][c] != a[i][c]):
                           return False 
     return True


matris = [ [ 1, 3, 5 ], [ 3, 2, 4 ], [ 5, 4, 1 ] ]
if (func(matris, 3)):
        print ("Yes")
else:
        print ("No")
        
        
ðŸ”´#23 --> ðŸ˜µðŸ¤”

 



